apiVersion: networking.k8s.io/v1 # 使用 Kubernetes v1 版本的 Ingress API
kind: Ingress # 声明资源类型为 Ingress，用于暴露 HTTP/HTTPS 服务
metadata:
  name: ingress-service # Ingress 资源的名称
  annotations: # 为 Ingress 配置一些额外的功能和行为
    kubernetes.io/ingress.class: nginx # 指定使用 NGINX Ingress Controller 处理此 Ingress
    nginx.ingress.kubernetes.io/use-regex: "true" # 启用路径中的正则表达式匹配
    nginx.ingress.kubernetes.io/rewrite-target: /$1 # 将匹配到的路径重写为正则表达式的第一个捕获组
    cert-manager.io/cluster-issuer: "letsencrypt-prod" # 使用 cert-manager 提供的 letsencrypt-prod ClusterIssuer 颁发 TLS 证书
    nginx.ingress.kubernetes.io/ssl-redirect: "true" # 强制将 HTTP 请求重定向到 HTTPS
spec:
  tls: # 定义 TLS 配置
    - hosts:
        - ztaer.com # 为 ztaer.com 配置 TLS
        - www.ztaer.com # 为 www.ztaer.com 配置 TLS
      secretName: ztaer-com # 使用存储证书和私钥的 Secret 名称，该 Secret 是由 cert-manager 创建的
  rules: # 定义域名和路径的路由规则
    - host: ztaer.com # 针对 ztaer.com 的规则
      http:
        paths:
          - path: /?(.*) # 匹配根路径及其所有子路径
            pathType: Prefix # 指定路径匹配方式为前缀匹配
            backend:
              service:
                name: client-cluster-ip-service # 将流量转发到 client-cluster-ip-service 服务
                port:
                  number: 3000 # 指定服务的端口为 3000
          - path: /api/?(.*) # 匹配 /api 路径及其子路径
            pathType: Prefix
            backend:
              service:
                name: server-cluster-ip-service # 将流量转发到 server-cluster-ip-service 服务
                port:
                  number: 5000 # 指定服务的端口为 5000
    - host: www.ztaer.com # 针对 www.ztaer.com 的规则，与上面类似
      http:
        paths:
          - path: /?(.*)
            pathType: Prefix
            backend:
              service:
                name: client-cluster-ip-service
                port:
                  number: 3000
          - path: /api/?(.*)
            pathType: Prefix
            backend:
              service:
                name: server-cluster-ip-service
                port:
                  number: 5000
